//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    pub static WKWebsiteDataTypeFetchCache: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeDiskCache: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeMemoryCache: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeOfflineWebApplicationCache: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeCookies: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeSessionStorage: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeLocalStorage: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeWebSQLDatabases: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeIndexedDBDatabases: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeServiceWorkerRegistrations: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeFileSystem: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeSearchFieldRecentSearches: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeMediaKeys: &'static NSString;
}

extern "C" {
    pub static WKWebsiteDataTypeHashSalt: &'static NSString;
}

extern_class!(
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct WKWebsiteDataRecord;

    unsafe impl ClassType for WKWebsiteDataRecord {
        type Super = NSObject;
        type Mutability = InteriorMutable;
    }
);

unsafe impl NSObjectProtocol for WKWebsiteDataRecord {}

extern_methods!(
    unsafe impl WKWebsiteDataRecord {
        #[method_id(@__retain_semantics Other displayName)]
        pub unsafe fn displayName(&self) -> Retained<NSString>;

        #[method_id(@__retain_semantics Other dataTypes)]
        pub unsafe fn dataTypes(&self) -> Retained<NSSet<NSString>>;
    }
);

extern_methods!(
    /// Methods declared on superclass `NSObject`
    unsafe impl WKWebsiteDataRecord {
        #[method_id(@__retain_semantics Init init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[method_id(@__retain_semantics New new)]
        pub unsafe fn new() -> Retained<Self>;
    }
);
