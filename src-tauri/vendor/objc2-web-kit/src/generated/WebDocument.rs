//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    #[deprecated]
    pub unsafe trait WebDocumentView: NSObjectProtocol {
        #[cfg(feature = "WebDataSource")]
        #[deprecated]
        #[method(setDataSource:)]
        unsafe fn setDataSource(&self, data_source: Option<&WebDataSource>);

        #[cfg(feature = "WebDataSource")]
        #[deprecated]
        #[method(dataSourceUpdated:)]
        unsafe fn dataSourceUpdated(&self, data_source: Option<&WebDataSource>);

        #[deprecated]
        #[method(setNeedsLayout:)]
        unsafe fn setNeedsLayout(&self, flag: bool);

        #[deprecated]
        #[method(layout)]
        unsafe fn layout(&self);

        #[cfg(feature = "objc2-app-kit")]
        #[cfg(target_os = "macos")]
        #[deprecated]
        #[method(viewWillMoveToHostWindow:)]
        unsafe fn viewWillMoveToHostWindow(&self, host_window: Option<&NSWindow>);

        #[deprecated]
        #[method(viewDidMoveToHostWindow)]
        unsafe fn viewDidMoveToHostWindow(&self);
    }

    unsafe impl ProtocolType for dyn WebDocumentView {}
);

extern_protocol!(
    #[deprecated]
    pub unsafe trait WebDocumentSearching: NSObjectProtocol {
        #[deprecated]
        #[method(searchFor:direction:caseSensitive:wrap:)]
        unsafe fn searchFor_direction_caseSensitive_wrap(
            &self,
            string: Option<&NSString>,
            forward: bool,
            case_flag: bool,
            wrap_flag: bool,
        ) -> bool;
    }

    unsafe impl ProtocolType for dyn WebDocumentSearching {}
);

extern_protocol!(
    #[deprecated]
    pub unsafe trait WebDocumentText: NSObjectProtocol {
        #[deprecated]
        #[method(supportsTextEncoding)]
        unsafe fn supportsTextEncoding(&self) -> bool;

        #[deprecated]
        #[method_id(@__retain_semantics Other string)]
        unsafe fn string(&self) -> Option<Retained<NSString>>;

        #[deprecated]
        #[method_id(@__retain_semantics Other attributedString)]
        unsafe fn attributedString(&self) -> Option<Retained<NSAttributedString>>;

        #[deprecated]
        #[method_id(@__retain_semantics Other selectedString)]
        unsafe fn selectedString(&self) -> Option<Retained<NSString>>;

        #[deprecated]
        #[method_id(@__retain_semantics Other selectedAttributedString)]
        unsafe fn selectedAttributedString(&self) -> Option<Retained<NSAttributedString>>;

        #[deprecated]
        #[method(selectAll)]
        unsafe fn selectAll(&self);

        #[deprecated]
        #[method(deselectAll)]
        unsafe fn deselectAll(&self);
    }

    unsafe impl ProtocolType for dyn WebDocumentText {}
);

extern_protocol!(
    #[deprecated]
    pub unsafe trait WebDocumentRepresentation: NSObjectProtocol {
        #[cfg(feature = "WebDataSource")]
        #[deprecated]
        #[method(setDataSource:)]
        unsafe fn setDataSource(&self, data_source: Option<&WebDataSource>);

        #[cfg(feature = "WebDataSource")]
        #[deprecated]
        #[method(receivedData:withDataSource:)]
        unsafe fn receivedData_withDataSource(
            &self,
            data: Option<&NSData>,
            data_source: Option<&WebDataSource>,
        );

        #[cfg(feature = "WebDataSource")]
        #[deprecated]
        #[method(receivedError:withDataSource:)]
        unsafe fn receivedError_withDataSource(
            &self,
            error: Option<&NSError>,
            data_source: Option<&WebDataSource>,
        );

        #[cfg(feature = "WebDataSource")]
        #[deprecated]
        #[method(finishedLoadingWithDataSource:)]
        unsafe fn finishedLoadingWithDataSource(&self, data_source: Option<&WebDataSource>);

        #[deprecated]
        #[method(canProvideDocumentSource)]
        unsafe fn canProvideDocumentSource(&self) -> bool;

        #[deprecated]
        #[method_id(@__retain_semantics Other documentSource)]
        unsafe fn documentSource(&self) -> Option<Retained<NSString>>;

        #[deprecated]
        #[method_id(@__retain_semantics Other title)]
        unsafe fn title(&self) -> Option<Retained<NSString>>;
    }

    unsafe impl ProtocolType for dyn WebDocumentRepresentation {}
);
